!!!

%html
  %head
    %title Image Processor | #{ yield :title }

    %meta(name="author" lang="ru" content="Speransky Danil")
    %meta(name="copyright" lang="ru" content="Speransky Danil")

    = stylesheet_link_tag 'application', media: 'all'

    = csrf_meta_tags

  %body#body.body
    .header
      - if user_signed_in?
        %nav.navbar.navbar-default.compact
          .container-fluid
            %ul.nav.navbar-nav
              %li
                = link_to main_path do
                  %span.glyphicon.glyphicon-home
                  = t('main')
              %li
                = link_to roles_path do
                  %span.glyphicon.glyphicon-briefcase
                  = t('admin.roles')
              %li
                = link_to users_path do
                  %span.glyphicon.glyphicon-user
                  = t('admin.users')
              %li
                = link_to statistics_path do
                  %span.glyphicon.glyphicon-stats
                  = t('admin.statistics')
              %li
                = link_to new_mail_to_admin_path do
                  %span.glyphicon.glyphicon-envelope
                  = t('admin.mail_to_admin')
              %li
                = link_to update_counters_path, method: :post do
                  %span.glyphicon.glyphicon-pencil
                  = t('admin.update_counters')
              %li.job-bar
                = link_to jobs_path do
                  %span.glyphicon.glyphicon-tasks
                  = t('admin.jobs')

                  %span.badge.job-total{ rel: 'tooltip', title: t('jobs.total'), 'data-placement' => 'bottom' }
                    = Delayed::Job.count

                  %span.badge.job-errors{ rel: 'tooltip', title: t('jobs.errors'), 'data-placement' => 'bottom' }
                    = Delayed::Job.where('last_error is not NULL').count

      .sidebar
        .auth
          - if user_signed_in?
            %b= current_user.email
            %span.separator /
            = link_to t('auth.sign_out'), destroy_user_session_path, method: :delete

        .lang
          = link_to_unless I18n.locale == :en, 'English', params.merge(locale: :en)
          %span.separator /
          = link_to_unless I18n.locale == :ru, 'Русский', params.merge(locale: :ru)

      .clear

    .content
      .scroll-up
        %span

      = yield :compass

      .crumbs= yield :crumbs

      - if flash[:alert]
        %p.alert.alert-warning= flash[:alert]

      - if flash[:error]
        %p.alert.alert-danger= flash[:error]

      - if flash[:notice]
        %p.alert.alert-success= flash[:notice]

      = yield

    .footer
      .version
        - cache('version', expires_in: 10.minutes) do
          version&nbsp; 2.1<small>.#{ `git log --pretty=format:'%s' | grep -n -m 1 'bump version' | cut -d : -f1` }</small>
          %br
          revision #{ `git log --date=short --pretty=format:'%ad' | head -n 1` }

      .clear

    = javascript_include_tag 'application'
    = yield :javascript

